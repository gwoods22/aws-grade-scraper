service: aws
useDotenv: true
plugins:
  - serverless-dotenv-plugin

provider:
  name: aws
  region: us-east-2
  versionFunctions: false
  # here we put the layers we want to use
  layers:
    # Google Chrome for AWS Lambda as a layer
    # Make sure you use the latest version depending on the region
    # https://github.com/shelfio/chrome-aws-lambda-layer
    - arn:aws:lambda:us-east-2:764866452798:layer:chrome-aws-lambda:20
  # function parameters
  runtime: nodejs12.x
  memorySize: 2048
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: arn:aws:s3:::${env:S3_SCREENSHOT_BUCKET}/*

functions:
  grade-scraper:
    handler: grade-scraper.handler
    environment:
      MOSAIC_USERNAME: ${env:MOSAIC_USERNAME}
      MOSAIC_PASSWORD: ${env:MOSAIC_PASSWORD}
      TWILIO_ACCOUNT_SID: ${env:TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${env:TWILIO_AUTH_TOKEN}
      S3_REGION: ${self:provider.region}
      S3_BUCKET: ${env:S3_SCREENSHOT_BUCKET}

resources:
  Resources:
    # Bucket where the screenshots are stored
    screenshotsBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Delete
      Properties:
        BucketName: ${env:S3_SCREENSHOT_BUCKET}
        AccessControl: Private
    # Grant public read-only access to the bucket
    screenshotsBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Principal: "*"
              Resource: arn:aws:s3:::${env:S3_SCREENSHOT_BUCKET}/*
        Bucket:
          Ref: screenshotsBucket      